name: Multiplatform Build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      # Set fail-fast to false to ensure that feedback is delivered for all matrix combinations. Consider changing this to true when your workflow is stable.
      fail-fast: true

      matrix:
        os: [ubuntu-latest, windows-latest, macos-13, macos-latest]
        build_type: [Release]
        include:
          - os: windows-latest
            triplet: x64-windows
          - os: ubuntu-latest
            triplet: x64-linux
          - os: macos-latest
            triplet: arm64-osx
          - os: macos-13
            triplet: x64-osx

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive

    - uses: lukka/get-cmake@latest

    - name: Setup vcpkg
      uses: lukka/run-vcpkg@v11
      with:
        vcpkgJsonGlob: '**/vcpkg.json'
        vcpkgDirectory: '${{ github.workspace }}/vcpkg'

    - name: Run CMake consuming CMakePreset.json and run vcpkg to build packages
      uses: lukka/run-cmake@v10
      with:
        configurePreset: 'ninja-multi-vcpkg'
        buildPreset: 'ninja-multi-vcpkg'

    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.os == 'macos-13' && 'macos-intel' || matrix.os == 'macos-latest' && 'macos-arm64' || matrix.os }}
        path: ${{ steps.strings.outputs.build-output-dir }}/dist/
